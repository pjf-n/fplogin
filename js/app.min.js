// Wait for the DOM to finish loading
$( document ).ready(function() {

    // Attach event handler to the submission of any form with attribute data-ajax-form
    // Calls the makeRequest method on an attempt submission
    $(document).on('submit', '[data-ajax-form]', makeRequest );

    /**
     * Makes a request to the API
     *
     * Prevents the default event action, in this case the submission of the form, as we want to carry out a custom
     * actions instead.
     * Extracts the HTTP request method from the forms data attribute data-method
     * Serializes all the forms input values and sends them with the request
     *
     * The response arrives as JSON so we need to parse it so that it is usable.
     *
     * Displays the response appropriately
     *
     * @param e the current event
     */
    function makeRequest(e) {

        // Prevents the default action
        e.preventDefault();

        // Prepare the required variables
        var form = $(this);
        var controller = form.data('controller');
        var action = form.data('action');

        // Set default controller
        if( controller == undefined ) {
            var controller = 'admin';
        }

        // Set default action
        if( controller == undefined ) {
            var controller = 'login';
        }

        // Prepare the remaining variables
        var apiUrl = 'http://localhost/forepointlogin/?controller=' + controller + '&action=' + action ;
        var formData = form.serialize();
        var submitButton = $(this).find('input[type=submit]');
        var originalButtonText = submitButton.val();

        // Disable the submit button and set it to loading
        submitButton.attr('disabled', true).val('Loading...');

        // Make the AJAX request
        $.ajax({
            url : apiUrl,
            type : 'post',
            data : formData,
            headers: {
                "ajax-request":"true"
            }
        })

        // This is run when the request returns a response
        .done(function( json ) {

            // Parse the JSON, get the alert element from the DOM
            var data = $.parseJSON( json );
            var alert = $('.alert');

            // Add the contents of the message property to the alert element, assign it's classes appropriately
            alert.html(data.error).removeClass('alert-success').removeClass('alert-danger').addClass('alert-' + data.type).removeClass('hidden');

            // Re-enable the submit button
            submitButton.attr('disabled', false).val(originalButtonText);
        });
    }
});